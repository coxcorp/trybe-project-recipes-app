import React from 'react';
import { screen, fireEvent } from '@testing-library/react';
import renderWithRouter from './assets/renderWithRouter';
import App from '../App';

describe('test header', () => {
  test('test header', async () => {
    const pageTitle = 'page-title';
    const { history } = renderWithRouter(<App />);
    expect(history.location.pathname).toBe('/');
    console.log(history.location.pathname);
    const email = screen.getByTestId('email-input');
    const password = screen.getByTestId('password-input');
    const loginButton = screen.getByTestId('login-submit-btn');
    // expect(email).toBeInTheDocument();
    // expect(password).toBeInTheDocument();
    // expect(loginButton).toBeInTheDocument();
    expect(loginButton).toBeDisabled();
    expect(history.location.pathname).toBe('/');
    fireEvent.change(email, { target: { value: 'eric@gmail.com' } });
    fireEvent.change(password, { target: { value: '1234567890' } });
    expect(loginButton).not.toBeDisabled();
    loginButton.click();
    console.log(history.location);
    const comidasTitle = screen.getByTestId(pageTitle);
    expect(comidasTitle.textContent).toBe('Comidas');
    const comidasprofilePic = screen.getByTestId('profile-top-btn');
    expect(comidasprofilePic).toBeInTheDocument();
    const firstfoodRecipe = await screen.findByTestId('1-recipe-card');
    expect(firstfoodRecipe).toBeInTheDocument();
    expect(screen.getByTestId('search-top-btn')).toBeInTheDocument();
    expect(screen.getByTestId('name-search-radio')).toBeInTheDocument();
    expect(screen.getByTestId('first-letter-search-radio')).toBeInTheDocument();
    expect(screen.getByTestId('exec-search-btn')).toBeInTheDocument();
    expect(screen.getByTestId('All-category-filter')).toBeInTheDocument();
    const searchByIngredient = screen.getByTestId('ingredient-search-radio');
    expect(searchByIngredient).toBeInTheDocument();
    screen.getByTestId('drinks-bottom-btn').click();
    expect(screen.getByTestId(pageTitle).textContent).toBe('Bebidas');
    const recipeCardDrink = await screen.findByTestId('0-recipe-card');
    recipeCardDrink.click();
    const startRecipeDrink = await screen.findByTestId('start-recipe-btn');
    startRecipeDrink.click();
    const receitaItems = await screen.findAllByTestId(/[\d]+-ingredient-step/);
    const endRecipe = await screen.findByTestId('finish-recipe-btn');
    expect(endRecipe).toBeDisabled();
    receitaItems.forEach((receita) => {
      receita.firstChild.click();
    });
    expect(endRecipe).not.toBeDisabled();
    endRecipe.click();
    expect(screen.getByTestId(pageTitle).textContent).toBe('Receitas Feitas');
    const profile = await screen.findByTestId('profile-top-btn');
    profile.click();
    expect(screen.getByTestId(pageTitle).textContent).toBe('Perfil');
    const foodSearch = await screen.findByTestId('food-bottom-btn');
    foodSearch.click();
    (await screen.findByTestId('0-recipe-card')).click();
    (await screen.findByTestId('start-recipe-btn')).click();
  });
});
